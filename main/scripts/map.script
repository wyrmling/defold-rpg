local defos = require("utils.defos")
local inspect = require("utils.inspect")

local bsp = require("main.map.bsp")


--local id = go.get_id()
--go.set(id,'battle_order_active',0)

T_SIZE = 16

function init(self)
	--defos.disable_window_resize()
	
	--msg.post('#calm_theme', 'play_sound', {gain = 0.1})
	
	math.randomseed(os.clock()*100000000000)
	
	--for i = 0, 10 do
    --	for j = 0, 10 do
    --		--tilemap.set_tile('/level#empty', 'walls', i, j, math.random(0,5))
    --		local is_empty = math.random(0,10)
    --		if is_empty > 7 then
    --			tilemap.set_tile('/level#empty', 'floor', i, j, 1)
    --		end
	--	end
	--end
	
	local map = bsp.create_map(0, 0)
	--pprint(map)
	for key, val in ipairs(map) do
		--print(val[1], val[2], val[3], val[4])
		--local color_tile = math.random(1,25)
		--print(key)
		for i = val[1], val[3] do
			for j = val[2], val[4] do
				--print(i, j)
				--print(key)
				tilemap.set_tile('/level#empty', 'floor', i+1, j+1, key)
			end
		end
	end
end

function final(self)

end

function update(self, dt)
	-- тут должен быть цикл из объектов и их ходов
	-- вместо этого пока что хардкод

	--particlefx.play('/particle_test#particlefx')
	--particlefx.play('/particle_test2#particlefx1')
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
end

function on_reload(self)
end